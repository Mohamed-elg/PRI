{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/auth.service\";\nexport class ConnectionComponent {\n  constructor(fb, router, authService) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.login_url = 'http://localhost:8081/api/account/auth';\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      identifiant: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const formData = this.loginForm.value;\n      this.authService.login(formData).subscribe(response => {\n        this.router.navigate(['/add-mechanical-sheet']);\n      }, error => {\n        console.error('Login failed', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ConnectionComponent_Factory(t) {\n    return new (t || ConnectionComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConnectionComponent,\n    selectors: [[\"connection\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"row\", \"g-3\", 3, \"formGroup\"], [1, \"col-md-6\"], [\"for\", \"inputId\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"inputId\", \"formControlName\", \"identifiant\", 1, \"form-control\"], [\"for\", \"inputPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"col-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function ConnectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Identifiant\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ConnectionComponent_Template_button_click_10_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(11, \"Connexion\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%] {\\n    margin: 15%;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    background-color: #012061;\\n    border-color: #012061;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    background-color: #000c25;\\n    border-color: #000c25;\\n}\\n\\nbutton[_ngcontent-%COMP%]:active {\\n    background-color: #000c25 !important;\\n    border-color: #000c25 !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29ubmVjdGlvbi9jb25uZWN0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLG9DQUFvQztJQUNwQyxnQ0FBZ0M7QUFDcEMiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcbiAgICBtYXJnaW46IDE1JTtcbn1cblxuYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDEyMDYxO1xuICAgIGJvcmRlci1jb2xvcjogIzAxMjA2MTtcbn1cblxuYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwYzI1O1xuICAgIGJvcmRlci1jb2xvcjogIzAwMGMyNTtcbn1cblxuYnV0dG9uOmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMGMyNSAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1jb2xvcjogIzAwMGMyNSAhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","ConnectionComponent","constructor","fb","router","authService","login_url","ngOnInit","loginForm","group","identifiant","required","password","onSubmit","valid","formData","value","login","subscribe","response","navigate","error","console","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","AuthService","_2","selectors","decls","vars","consts","template","ConnectionComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ConnectionComponent_Template_button_click_10_listener","ɵɵproperty"],"sources":["C:\\Users\\ANAS\\Desktop\\pri5\\PRI\\web\\src\\app\\connection\\connection.component.ts","C:\\Users\\ANAS\\Desktop\\pri5\\PRI\\web\\src\\app\\connection\\connection.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\n\ninterface LoginResponse {\n  role: string;\n  identifiant: string;\n  message: string;\n  token: string;\n}\n\n@Component({\n  selector: 'connection',\n  templateUrl: './connection.component.html',\n  styleUrls: ['./connection.component.css']\n})\nexport class ConnectionComponent implements OnInit {\n  loginForm!: FormGroup;\n\n  login_url = 'http://localhost:8081/api/account/auth';\n\n  constructor(private fb: FormBuilder, private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n      this.loginForm = this.fb.group({\n        identifiant:   ['', Validators.required],\n        password: ['', Validators.required]\n      });\n  }\n\n  onSubmit() {\n    if(this.loginForm.valid) {\n      const formData = this.loginForm.value;\n\n      this.authService.login(formData).subscribe(\n        (response) => {\n          this.router.navigate(['/add-mechanical-sheet']);\n        },\n        (error) => {\n          console.error('Login failed', error);\n        }\n      )\n    }\n  }\n\n}\n","<form class=\"row g-3\" [formGroup]=\"loginForm\">\n    <div class=\"col-md-6\">\n      <label for=\"inputId\" class=\"form-label\">Identifiant</label>\n      <input type=\"text\" class=\"form-control\" id=\"inputId\" formControlName=\"identifiant\">\n    </div>\n    <div class=\"col-md-6\">\n      <label for=\"inputPassword\" class=\"form-label\">Mot de passe</label>\n      <input type=\"password\" class=\"form-control\" id=\"inputPassword\" formControlName=\"password\">\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Connexion</button>\n    </div>\n</form>"],"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAiBnE,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,EAAe,EAAUC,MAAc,EAAUC,WAAwB;IAAzE,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAFhF,KAAAC,SAAS,GAAG,wCAAwC;EAE6C;EAEjGC,QAAQA,CAAA;IACJ,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BC,WAAW,EAAI,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACxCC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KACnC,CAAC;EACN;EAEAE,QAAQA,CAAA;IACN,IAAG,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACvB,MAAMC,QAAQ,GAAG,IAAI,CAACP,SAAS,CAACQ,KAAK;MAErC,IAAI,CAACX,WAAW,CAACY,KAAK,CAACF,QAAQ,CAAC,CAACG,SAAS,CACvCC,QAAQ,IAAI;QACX,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;MACjD,CAAC,EACAC,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC,CAAC,CACF;;EAEL;EAAC,QAAAE,CAAA,G;qBA3BUtB,mBAAmB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnB/B,mBAAmB;IAAAgC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCnBhCf,EAAA,CAAAiB,cAAA,cAA8C;QAEAjB,EAAA,CAAAkB,MAAA,kBAAW;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAC3DnB,EAAA,CAAAoB,SAAA,eAAmF;QACrFpB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAiB,cAAA,aAAsB;QAC0BjB,EAAA,CAAAkB,MAAA,mBAAY;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAClEnB,EAAA,CAAAoB,SAAA,eAA0F;QAC5FpB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAiB,cAAA,aAAoB;QAC4BjB,EAAA,CAAAqB,UAAA,mBAAAC,sDAAA;UAAA,OAASN,GAAA,CAAA3B,QAAA,EAAU;QAAA,EAAC;QAACW,EAAA,CAAAkB,MAAA,iBAAS;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAVrEnB,EAAA,CAAAuB,UAAA,cAAAP,GAAA,CAAAhC,SAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}